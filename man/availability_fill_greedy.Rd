% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schedule.R
\name{availability_fill_greedy}
\alias{availability_fill_greedy}
\title{Fill in meetings with a greedy algorithm}
\usage{
availability_fill_greedy(
  possible_availability,
  guests,
  desired_length = 60,
  slot_length = 15,
  earliest_possible = TRUE,
  host_rooms = c(),
  max_iterations = 100
)
}
\arguments{
\item{possible_availability}{3D array with dimensions host, guest, times}

\item{guests}{The data.frame of guest info, including a column of Name of the guest and Desired the hosts to meet}

\item{desired_length}{The amount of time to require in a slot}

\item{slot_length}{The amount of time each slot represents}

\item{earliest_possible}{If TRUE, tries to do this meeting as early in the day as it can; if FALSE, as late}

\item{host_rooms}{The vector of host rooms: room is entry, host name is names}

\item{max_iterations}{The maximum number of iterations to try to schedule}
}
\value{
An array in same format as possible_availability, but with 2 for the assigned slots, 0 for the unavailable slots, and 1 for available but still unfilled.
}
\description{
This will take an availability array and info on guest priorities and fill in the essential meetings. It will make sure the slots are contiguous in time (so if there's a lunch break, it won't schedule a meeting across it). If you include a vector of rooms, where the vector if alphabetized puts nearby rooms together ("Smith 101", "Smith 201", "Adams 404") it will try to schedule appointments so that appointments are scheduled in nearby rooms. It will randomly do pairs of guests and hosts. Then it will repeat this, trying to maximize the number of meetings scheduled.
}
